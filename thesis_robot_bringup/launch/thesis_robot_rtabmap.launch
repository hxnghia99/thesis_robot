<launch>
  
  <node name="camera_color_optical" pkg="tf" type="static_transform_publisher" args="0 0 0.285 1.57 3.14 1.57 /base_link /camera_color_optical_frame 100"/>

  <arg name="rviz"                default="false"/>  
  <arg name="rtabmapviz"          default="false"/>
  <arg name="scan_matcher"        default="false"/>
  <arg name="gui_cfg"             default="~/.ros/rtabmap_gui.ini" />

  <arg name="database_path"       default="rtabmap.db"/>
  <arg name="delete_db"           default="true"/>
  <arg name="localization"        default="false"/>
  <arg name="simulation"          default="false"/>
  <arg name="wait_for_transform"  default="100"/> 


  <!-- Input topics -->
  <arg name="rgb_topic"                                 default="/camera/color/image_raw"/>
  <arg name="depth_topic"                               default="/camera/aligned_depth_to_color/image_raw"/>
  <arg name="camera_info_topic"                         default="/camera/color/camera_info"/>
  <arg name="scan_topic"                                default="/scan"/>
  <arg name="odom_topic"                                default="/odom"/>

  <arg name="compressed"              default="false"/>
  <arg name="rgb_image_transport"     default="compressed"/>
  <arg if="$(arg compressed)"     name="rgb_topic_relay"           default="$(arg rgb_topic)_relay"/>
  <arg unless="$(arg compressed)" name="rgb_topic_relay"           default="$(arg rgb_topic)"/>
  <node if="$(arg compressed)" name="republish_rgb" type="republish" pkg="image_transport" args="$(arg rgb_image_transport) in:=$(arg rgb_topic) raw out:=$(arg rgb_topic_relay)" />
  
  <arg name="rtabmap_frame"     default="base_footprint"/>

  <arg     if="$(arg delete_db)" name="args"  default="--delete_db_on_start"/>
  <arg unless="$(arg delete_db)" name="args"  default=""/>


  <!-- Navigation parameters -->
  <arg name="odom_frame_id"   default="odom"/>
  <arg name="base_frame_id"   default="base_footprint"/>
  <arg name="global_frame_id" default="map"/>
  <!--arg name="odom_topic" default="odom" /-->
  <arg name="laser_topic" default="scan" />
  <arg name="custom_param_file" default="$(find robot_navigation)/param/dummy.yaml"/>

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find thesis_robot_bringup)/param/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find thesis_robot_bringup)/param/costmap_common_params.yaml" command="load" ns="local_costmap" />   
    <rosparam file="$(find thesis_robot_bringup)/param/local_costmap_params.yaml" command="load" />   
    <rosparam file="$(find thesis_robot_bringup)/param/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find thesis_robot_bringup)/param/dwa_local_planner_params.yaml" command="load" />
    <rosparam file="$(find thesis_robot_bringup)/param/move_base_params.yaml" command="load" />
    <rosparam file="$(find thesis_robot_bringup)/param/global_planner_params.yaml" command="load" />
    <rosparam file="$(find thesis_robot_bringup)/param/navfn_global_planner_params.yaml" command="load" />
   
    <rosparam file="$(arg custom_param_file)" command="load" />
    
   
    <param name="global_costmap/global_frame" value="$(arg global_frame_id)"/>
    <param name="global_costmap/robot_base_frame" value="$(arg base_frame_id)"/>
    <param name="local_costmap/global_frame" value="$(arg odom_frame_id)"/>
    <param name="local_costmap/robot_base_frame" value="$(arg base_frame_id)"/>
    <param name="DWAPlannerROS/global_frame_id" value="$(arg odom_frame_id)"/>

    <remap from="odom" to="$(arg odom_topic)"/>
    <remap from="scan" to="$(arg laser_topic)"/>
  </node>

  <!-- Robot remote and description -->
  <include file="$(find thesis_robot_bringup)/launch/thesis_robot_remote.launch"/>

  <!-- Scan Matcher -->
  <include if="$(arg scan_matcher)" file="$(find thesis_robot_bringup)/launch/thesis_robot_scan_matcher.launch"/>

  <!-- Mapping -->
  <group ns="rtabmap">

    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="$(arg args)">
      <param name="database_path"                    type="string"    value="$(arg database_path)"/>
      <param name="frame_id"                         type="string"    value="$(arg rtabmap_frame)"/>
      <param name="wait_for_transform_duration"      type="double"    value="$(arg wait_for_transform)"/>
      <param name="map_always_update"                type="bool"      value="true"/>
      <param name="subscribe_depth"                  type="bool"      value="true"/>
      <param name="subscribe_scan"                   type="bool"      value="true"/>
      <param name="queue_size"                                        value="200"/>

      <!-- When sending goals on /rtabmap/goal topic, use actionlib to communicate with move_base --> 
      <param name="use_action_for_goal"              type="bool" value="true"/>
      <remap from="move_base"                        to="/move_base"/>
    
      <!-- inputs -->
      <remap from="scan"            to="$(arg scan_topic)"/>
      <remap from="rgb/image"       to="$(arg rgb_topic_relay)"/>
      <remap from="depth/image"     to="$(arg depth_topic)"/>
      <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>
      <remap from="odom"            to="$(arg odom_topic)"/>

      <!-- Fix odom covariance as in simulation the covariance in /odom topic is high (0.1 for linear and 0.05 for angular) -->
      <param name="odom_tf_linear_variance" value="0.001"/>
      <param name="odom_tf_angular_variance" value="0.001"/>
        
      <!-- output -->
      <remap from="grid_map" to="/map"/>
            

      <!-- RTAB-Map's parameters: do "rosrun rtabmap rtabmap (double-dash)params" to see the list of available parameters. -->
      <param name="RGBD/ProximityBySpace"           type="string" value="true"/>   <!-- Local loop closure detection (using estimated position) with locations in WM -->
      <param name="RGBD/OptimizeFromGraphEnd"       type="string" value="false"/>  <!-- Set to false to generate map correction between /map and /odom -->
      <param name="Kp/MaxDepth"                     type="string" value="4.0"/>
      <param name="Reg/Strategy"                    type="string" value="0"/>      <!-- Loop closure transformation: 0=Visual, 1=ICP, 2=Visual+ICP -->
      <param name="Icp/CorrespondenceRatio"         type="string" value="0.3"/>
      <param name="Vis/MinInliers"                  type="string" value="15"/>     <!-- 3D visual words minimum inliers to accept loop closure -->
      <param name="Vis/InlierDistance"              type="string" value="0.1"/>    <!-- 3D visual words correspondence distance -->
      <param name="RGBD/AngularUpdate"              type="string" value="0.1"/>    <!-- Update map only if the robot is moving -->
      <param name="RGBD/LinearUpdate"               type="string" value="0.1"/>    <!-- Update map only if the robot is moving -->
      <param name="RGBD/ProximityPathMaxNeighbors"  type="string" value="0"/> 
      <param name="Rtabmap/TimeThr"                 type="string" value="0"/>
      <param name="Rtabmap/DetectionRate"           type="string" value="5"/>
      <param name="Mem/RehearsalSimilarity"         type="string" value="0.30"/>
      <param name="Reg/Force3DoF"                   type="string" value="true"/>
      <param name="GridGlobal/MinSize"              type="string" value="20"/>
      <param name="Grid/FromDepth"                  type="string" value="false"/>

      <!-- localization mode -->
      <param     if="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="false"/>
      <param unless="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>
      <param name="Mem/InitWMWithAllNodes" type="string" value="$(arg localization)"/> 
    </node>
   
    <!-- Rviz visualization -->
    <node if="$(arg rviz)" pkg="rviz" type="rviz" name="rviz" required="true" args="-d $(find robot_rtabmap)/rviz/robot_rtabmap.rviz"/>
        
  </group>
</launch>
